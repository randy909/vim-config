-- WINDOWS --
download/install ruby192 to c:\Ruby192 from rubyinstallers.org
download/install devkit to c:\Devkit 4.5.1 from rubyinstallers.org
    (you can also install Devkit here to build ruby plugins like command-t)
get vim code from mercurial (the version i got was 7.3.087)
    - get the "tip" not a branch
open dos window
go to devkit and run the script that sets env vars
go to "vim checkout dir"/src
    read the INSTALLpc.txt for a refresher
update Make_ming.mak to have the right ruby version
apply any other patches like the off_t fix
run:
make -B -f Make_ming.mak OLE=yes gvim.exe RUBY=C:/Ruby192
copy gvim.exe to program files/vim...
copy several required .dll's (like libstdc++-6.dll) to vim/vim73 from devkit (mingw)



-- LINUX --
(assuming you want ruby 1.9)
install ruby1.9 (full with dev stuff) via package manager
    note: rails requires the latest version of ruby so you have to install
    it (1.9.2) via the source
install python w/ dev libs (2 instead of 3 is easier)
install perl w/ dev libs
check out latest vim code with hg (mercurial)
    hg clone https://vim.googlecode.com/hg/ vim
cd vim/src
update Makefile:
    uncomment lines
    CONF_OPT_PERL = --enable-perlinterp
    CONF_OPT_PYTHON = --enable-pythoninterp
    CONF_OPT_RUBY = --enable-rubyinterp --with-ruby-command=ruby1.9.1
    (set the prefix if you want to install to home directory)

sudo apt-get install libncurses5-dev
# i installed these 3 last time, xorg-dev finally got the x11 headers
# but xorg-dev isn't listed as a dependency of vim, hmm...
sudo apt-get install libgtk2.0-dev
sudo apt-get install libgnomeui-dev
sudo apt-get install xorg-dev

make
make install

(can also use 'make config' to only do that step with the makefile options)

to install to home directory search the Makefile for "prefix" and there will
be a line showing you how to install to $HOME. I installed to $HOME/my to
organize things a bit more.

I did not use the dynamic versions of the --enable-blahinterp=dynamic,
could play around with that in the future, not totally sure of the advantages.
